import { Component, Injector, OnInit } from '@angular/core';
import { ActivatedRoute, Router, ParamMap } from '@angular/router';

import { PAGES } from '../../../common/constants/pages.constant';
import { PAYMENT_STATUS } from '../../../common/constants/payment-status.constant';
import { TransactionService } from '../../../common/services/transaction.service';

@Component({
    selector: 'app-transaction',
    templateUrl: './transaction.component.html',
    styleUrls: ['./transaction.component.scss']
})
export class PageTransactionComponent implements OnInit {

    constructor(private Transaction: TransactionService, private route: ActivatedRoute, private router: Router) { }

    /**
     *
     */
    ngOnInit() {
        this.processTransaction();
    }

    /**
     *
     */
    processTransaction() {
        this.Transaction.clear();
        this.route.paramMap
            .subscribe((params) => {
                // Data will be sent to this page in the form of a custom string. The string is generated by a payment.html page,
                // which receives the query string from Paris.
                // We had to do this because Angular routes don't like ampersands (&) or the equals sign in route parameters.
                const data = params.get('data');
                this.Transaction.process(data);

                let transaction_state;
                if (this.Transaction.hasErrorMessage()) {
                    transaction_state = PAGES.TRANSACTION_ERROR.route;
                } else {
                    // Based on the outcome of the transaction, redirect to the appropriate page.
                    transaction_state = this.Transaction.wasSuccessful() ? PAGES.TRANSACTION_SUCCESS.route :
                        PAGES.TRANSACTION_FAILED.route;
                }

                setTimeout(() => {
                    this.router.navigateByUrl(`${PAGES.TRANSACTION.route}/${transaction_state}`);
                }, 200);
            });
    }


}
